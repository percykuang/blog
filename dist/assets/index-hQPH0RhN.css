pre code.hljs {
  display: block;
  overflow-x: auto;
  padding: 1em;
}
code.hljs {
  padding: 3px 5px;
} /*!
  Theme: GitHub
  Description: Light theme as seen on github.com
  Author: github.com
  Maintainer: @Hirse
  Updated: 2021-05-15

  Outdated base version: https://github.com/primer/github-syntax-light
  Current colors taken from GitHub's CSS
*/
.hljs {
  color: #24292e;
  background: #fff;
}
.hljs-doctag,
.hljs-keyword,
.hljs-meta .hljs-keyword,
.hljs-template-tag,
.hljs-template-variable,
.hljs-type,
.hljs-variable.language_ {
  color: #d73a49;
}
.hljs-title,
.hljs-title.class_,
.hljs-title.class_.inherited__,
.hljs-title.function_ {
  color: #6f42c1;
}
.hljs-attr,
.hljs-attribute,
.hljs-literal,
.hljs-meta,
.hljs-number,
.hljs-operator,
.hljs-variable,
.hljs-selector-attr,
.hljs-selector-class,
.hljs-selector-id {
  color: #005cc5;
}
.hljs-regexp,
.hljs-string,
.hljs-meta .hljs-string {
  color: #032f62;
}
.hljs-built_in,
.hljs-symbol {
  color: #e36209;
}
.hljs-comment,
.hljs-code,
.hljs-formula {
  color: #6a737d;
}
.hljs-name,
.hljs-quote,
.hljs-selector-tag,
.hljs-selector-pseudo {
  color: #22863a;
}
.hljs-subst {
  color: #24292e;
}
.hljs-section {
  color: #005cc5;
  font-weight: 700;
}
.hljs-bullet {
  color: #735c0f;
}
.hljs-emphasis {
  color: #24292e;
  font-style: italic;
}
.hljs-strong {
  color: #24292e;
  font-weight: 700;
}
.hljs-addition {
  color: #22863a;
  background-color: #f0fff4;
}
.hljs-deletion {
  color: #b31d28;
  background-color: #ffeef0;
} /*! tailwindcss v4.0.8 | MIT License | https://tailwindcss.com */
@font-face {
  font-family: LXGW WenKai Lite;
  src:
    url(/fonts/LXGWWenKaiLite-Regular.woff2) format('woff2'),
    url(/fonts/LXGWWenKaiMonoLite-Regular.woff2) format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: Input Mono;
  src:
    url(/fonts/InputMono-Regular.woff2) format('woff2'),
    url(/fonts/InputMono-Regular.woff2) format('woff');
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@layer theme {
  :root,
  :host {
    --font-sans:
      ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
    --color-emerald-300: oklch(0.845 0.143 164.978);
    --color-blue-600: oklch(0.546 0.245 262.881);
    --color-slate-600: oklch(0.446 0.043 257.281);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-300: oklch(0.872 0.01 258.338);
    --color-gray-400: oklch(0.707 0.022 261.325);
    --color-stone-400: oklch(0.709 0.01 56.259);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: 1.5;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: 1.2;
    --font-weight-normal: 400;
    --font-weight-bold: 700;
    --radius-lg: 0.5rem;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(--font-sans--font-variation-settings);
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(--font-mono--font-feature-settings);
    --default-mono-font-variation-settings: var(--font-mono--font-variation-settings);
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      'Apple Color Emoji',
      'Segoe UI Emoji',
      'Segoe UI Symbol',
      'Noto Color Emoji'
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      'Liberation Mono',
      'Courier New',
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type='button'], [type='reset'], [type='submit']) {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }
  ::file-selector-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
  html {
    font-family:
      LXGW WenKai Lite,
      -apple-system,
      BlinkMacSystemFont,
      Segoe UI,
      Roboto,
      Helvetica Neue,
      Arial,
      Noto Sans,
      sans-serif,
      Apple Color Emoji,
      Segoe UI Emoji,
      Segoe UI Symbol,
      Noto Color Emoji;
    font-size: 16px;
    font-weight: 400;
  }
}
@layer components {
  .prose {
    font-size: 16px !important;
  }
  .prose pre {
    background: 0 0 !important;
    margin: 0 !important;
    padding: 0 !important;
  }
  .prose pre code.hljs {
    background-color: #f6f8fa !important;
    border: 1px solid #e1e4e8 !important;
    border-radius: 6px !important;
    padding: 16px !important;
    font-family:
      Input Mono,
      Menlo,
      ui-monospace,
      SFMono-Regular,
      Consolas,
      Liberation Mono,
      Courier New,
      monospace !important;
    font-size: 0.875rem !important;
    font-weight: 400 !important;
    line-height: 1.5 !important;
  }
  .prose :not(pre) > code.inline-code {
    background-color: #f2f2f2;
    border-radius: 0.25em;
    padding: 0.2em 0.4em;
    font-family:
      LXGW WenKai Lite,
      Menlo,
      monospace;
    font-size: 0.875em;
    color: #c7254e !important;
    -webkit-user-select: all !important;
    user-select: all !important;
  }
  .prose :not(pre) > code.inline-code:before,
  .prose :not(pre) > code.inline-code:after {
    content: none !important;
  }
}
@layer utilities {
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .top-2 {
    top: calc(var(--spacing) * 2);
  }
  .top-\[-6px\] {
    top: -6px;
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .left-\[4px\] {
    left: 4px;
  }
  .container {
    width: 100%;
  }
  @media (width>=40rem) {
    .container {
      max-width: 40rem;
    }
  }
  @media (width>=48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (width>=64rem) {
    .container {
      max-width: 64rem;
    }
  }
  @media (width>=80rem) {
    .container {
      max-width: 80rem;
    }
  }
  @media (width>=96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .m-0 {
    margin: calc(var(--spacing) * 0);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .mx-0 {
    margin-inline: calc(var(--spacing) * 0);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }
  .me-1 {
    margin-inline-end: calc(var(--spacing) * 1);
  }
  .prose {
    color: var(--tw-prose-body);
    --tw-prose-body: oklch(0.373 0.034 259.733);
    --tw-prose-headings: oklch(0.21 0.034 264.665);
    --tw-prose-lead: oklch(0.446 0.03 256.802);
    --tw-prose-links: oklch(0.21 0.034 264.665);
    --tw-prose-bold: oklch(0.21 0.034 264.665);
    --tw-prose-counters: oklch(0.551 0.027 264.364);
    --tw-prose-bullets: oklch(0.872 0.01 258.338);
    --tw-prose-hr: oklch(0.928 0.006 264.531);
    --tw-prose-quotes: oklch(0.21 0.034 264.665);
    --tw-prose-quote-borders: oklch(0.928 0.006 264.531);
    --tw-prose-captions: oklch(0.551 0.027 264.364);
    --tw-prose-kbd: oklch(0.21 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.21 0.034 264.665);
    --tw-prose-pre-code: oklch(0.928 0.006 264.531);
    --tw-prose-pre-bg: oklch(0.278 0.033 256.848);
    --tw-prose-th-borders: oklch(0.872 0.01 258.338);
    --tw-prose-td-borders: oklch(0.928 0.006 264.531);
    --tw-prose-invert-body: oklch(0.872 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.707 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.707 0.022 261.325);
    --tw-prose-invert-bullets: oklch(0.446 0.03 256.802);
    --tw-prose-invert-hr: oklch(0.373 0.034 259.733);
    --tw-prose-invert-quotes: oklch(0.967 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(0.373 0.034 259.733);
    --tw-prose-invert-captions: oklch(0.707 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.872 0.01 258.338);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.446 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(0.373 0.034 259.733);
    max-width: 65ch;
    font-size: 1rem;
    line-height: 1.75;
  }
  .prose :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose :where([class~='lead']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-lead);
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    font-size: 1.25em;
    line-height: 1.6;
  }
  .prose :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-links);
    font-weight: 500;
    text-decoration: underline;
  }
  .prose :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .prose :where(a strong):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(blockquote strong):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(thead th strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  .prose :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: decimal;
  }
  .prose :where(ol[type='A']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: upper-alpha;
  }
  .prose :where(ol[type='a']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: lower-alpha;
  }
  .prose :where(ol[type='A s']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: upper-alpha;
  }
  .prose :where(ol[type='a s']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: lower-alpha;
  }
  .prose :where(ol[type='I']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: upper-roman;
  }
  .prose :where(ol[type='i']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: lower-roman;
  }
  .prose :where(ol[type='I s']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: upper-roman;
  }
  .prose :where(ol[type='i s']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: lower-roman;
  }
  .prose :where(ol[type='1']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    list-style-type: decimal;
  }
  .prose :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: disc;
  }
  .prose :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *))::marker {
    color: var(--tw-prose-counters);
    font-weight: 400;
  }
  .prose :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *))::marker {
    color: var(--tw-prose-bullets);
  }
  .prose :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.25em;
    font-weight: 600;
  }
  .prose :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .prose :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-quotes);
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: '“' '”' '‘' '’';
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
    font-style: italic;
    font-weight: 500;
  }
  .prose :where(blockquote p:first-of-type):not(:where([class~='not-prose'], [class~='not-prose'] *)):before {
    content: open-quote;
  }
  .prose :where(blockquote p:last-of-type):not(:where([class~='not-prose'], [class~='not-prose'] *)):after {
    content: close-quote;
  }
  .prose :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 0;
    margin-bottom: 0.888889em;
    font-size: 2.25em;
    font-weight: 800;
    line-height: 1.11111;
  }
  .prose :where(h1 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-weight: 900;
  }
  .prose :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 2em;
    margin-bottom: 1em;
    font-size: 1.5em;
    font-weight: 700;
    line-height: 1.33333;
  }
  .prose :where(h2 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-weight: 800;
  }
  .prose :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
  }
  .prose :where(h3 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    font-weight: 600;
    line-height: 1.5;
  }
  .prose :where(h4 strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
    display: block;
  }
  .prose :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-kbd);
    box-shadow:
      0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
      0 3px rgb(var(--tw-prose-kbd-shadows) / 10%);
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.375em;
    font-family: inherit;
    font-size: 0.875em;
    font-weight: 500;
  }
  .prose :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-code);
    font-size: 0.875em;
    font-weight: 600;
  }
  .prose :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)):before,
  .prose :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)):after {
    content: '`';
  }
  .prose :where(a code):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(h1 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  .prose :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  .prose :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  .prose :where(h4 code):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(blockquote code):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(thead th code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  .prose :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    padding-top: 0.857143em;
    padding-inline-end: 1.14286em;
    padding-bottom: 0.857143em;
    border-radius: 0.375rem;
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
    padding-inline-start: 1.14286em;
    font-size: 0.875em;
    font-weight: 400;
    line-height: 1.71429;
    overflow-x: auto;
  }
  .prose :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    background-color: #0000;
    border-width: 0;
    border-radius: 0;
    padding: 0;
  }
  .prose :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)):before,
  .prose :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)):after {
    content: none;
  }
  .prose :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    table-layout: auto;
    width: 100%;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.71429;
  }
  .prose :where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .prose :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    vertical-align: bottom;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
    font-weight: 600;
  }
  .prose :where(tbody tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .prose :where(tbody tr:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 0;
  }
  .prose :where(tbody td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: baseline;
  }
  .prose :where(tfoot):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .prose :where(tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: top;
  }
  .prose :where(th, td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    text-align: start;
  }
  .prose :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-captions);
    margin-top: 0.857143em;
    font-size: 0.875em;
    line-height: 1.42857;
  }
  .prose :where(picture > img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.375em;
  }
  .prose :where(.prose > ul > li p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose :where(.prose > ul > li > p:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
  }
  .prose :where(.prose > ul > li > p:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-bottom: 1.25em;
  }
  .prose :where(.prose > ol > li > p:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
  }
  .prose :where(.prose > ol > li > p:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-bottom: 1.25em;
  }
  .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  .prose :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  .prose :where(thead th:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0;
  }
  .prose :where(thead th:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-end: 0;
  }
  .prose :where(tbody td, tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-top: 0.571429em;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
  }
  .prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0;
  }
  .prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-end: 0;
  }
  .prose :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(.prose > :first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  .prose :where(.prose > :last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-bottom: 0;
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mb-0 {
    margin-bottom: calc(var(--spacing) * 0);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .ml-0 {
    margin-left: calc(var(--spacing) * 0);
  }
  .ml-5 {
    margin-left: calc(var(--spacing) * 5);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .list-item {
    display: list-item;
  }
  .table {
    display: table;
  }
  .table-cell {
    display: table-cell;
  }
  .table-footer-group {
    display: table-footer-group;
  }
  .table-header-group {
    display: table-header-group;
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .max-w-192 {
    max-width: calc(var(--spacing) * 192);
  }
  .max-w-none {
    max-width: none;
  }
  .flex-\[46\%\] {
    flex: 46%;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .border-collapse {
    border-collapse: collapse;
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .resize {
    resize: both;
  }
  .flex-row-reverse {
    flex-direction: row-reverse;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-items-center {
    justify-items: center;
  }
  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .bg-white\/10 {
    background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
  }
  .p-0 {
    padding: calc(var(--spacing) * 0);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-20 {
    padding-bottom: calc(var(--spacing) * 20);
  }
  .text-center {
    text-align: center;
  }
  .text-justify {
    text-align: justify;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-10 {
    --tw-leading: calc(var(--spacing) * 10);
    line-height: calc(var(--spacing) * 10);
  }
  .leading-\[1\.8\] {
    --tw-leading: 1.8;
    line-height: 1.8;
  }
  .\!font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal) !important;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-all {
    word-break: break-all;
  }
  .text-\[\#999\] {
    color: #999;
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-slate-600 {
    color: var(--color-slate-600);
  }
  .text-stone-400 {
    color: var(--color-stone-400);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0;
  }
  .opacity-30 {
    opacity: 0.3;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,)
      var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .invert {
    --tw-invert: invert(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,)
      var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,)
      var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-filter {
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property:
      color,
      background-color,
      border-color,
      outline-color,
      text-decoration-color,
      fill,
      stroke,
      --tw-gradient-from,
      --tw-gradient-via,
      --tw-gradient-to,
      opacity,
      box-shadow,
      transform,
      translate,
      scale,
      rotate,
      filter,
      -webkit-backdrop-filter,
      backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition\! {
    transition-property:
      color,
      background-color,
      border-color,
      outline-color,
      text-decoration-color,
      fill,
      stroke,
      --tw-gradient-from,
      --tw-gradient-via,
      --tw-gradient-to,
      opacity,
      box-shadow,
      transform,
      translate,
      scale,
      rotate,
      filter,
      -webkit-backdrop-filter,
      backdrop-filter !important;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function)) !important;
    transition-duration: var(--tw-duration, var(--default-transition-duration)) !important;
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 0.2s;
    transition-duration: 0.2s;
  }
  .prose-stone {
    --tw-prose-body: oklch(0.374 0.01 67.558);
    --tw-prose-headings: oklch(0.216 0.006 56.043);
    --tw-prose-lead: oklch(0.444 0.011 73.639);
    --tw-prose-links: oklch(0.216 0.006 56.043);
    --tw-prose-bold: oklch(0.216 0.006 56.043);
    --tw-prose-counters: oklch(0.553 0.013 58.071);
    --tw-prose-bullets: oklch(0.869 0.005 56.366);
    --tw-prose-hr: oklch(0.923 0.003 48.717);
    --tw-prose-quotes: oklch(0.216 0.006 56.043);
    --tw-prose-quote-borders: oklch(0.923 0.003 48.717);
    --tw-prose-captions: oklch(0.553 0.013 58.071);
    --tw-prose-kbd: oklch(0.216 0.006 56.043);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(0.216 0.006 56.043);
    --tw-prose-pre-code: oklch(0.923 0.003 48.717);
    --tw-prose-pre-bg: oklch(0.268 0.007 34.298);
    --tw-prose-th-borders: oklch(0.869 0.005 56.366);
    --tw-prose-td-borders: oklch(0.923 0.003 48.717);
    --tw-prose-invert-body: oklch(0.869 0.005 56.366);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(0.709 0.01 56.259);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(0.709 0.01 56.259);
    --tw-prose-invert-bullets: oklch(0.444 0.011 73.639);
    --tw-prose-invert-hr: oklch(0.374 0.01 67.558);
    --tw-prose-invert-quotes: oklch(0.97 0.001 106.424);
    --tw-prose-invert-quote-borders: oklch(0.374 0.01 67.558);
    --tw-prose-invert-captions: oklch(0.709 0.01 56.259);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(0.869 0.005 56.366);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(0.444 0.011 73.639);
    --tw-prose-invert-td-borders: oklch(0.374 0.01 67.558);
  }
  .\[a-zA-Z\:_\] {
    a-za-z:;
  }
  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
    .hover\:cursor-pointer:hover {
      cursor: pointer;
    }
    .hover\:bg-white\/20:hover {
      background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
    .hover\:text-emerald-300:hover {
      color: var(--color-emerald-300);
    }
    .hover\:text-gray-300:hover {
      color: var(--color-gray-300);
    }
  }
  .active\:text-emerald-300:active {
    color: var(--color-emerald-300);
  }
  @media (width<48rem) {
    .max-md\:m-0 {
      margin: calc(var(--spacing) * 0);
    }
    .max-md\:mx-4 {
      margin-inline: calc(var(--spacing) * 4);
    }
    .max-md\:my-0 {
      margin-block: calc(var(--spacing) * 0);
    }
    .max-md\:mr-5 {
      margin-right: calc(var(--spacing) * 5);
    }
    .max-md\:flex-row {
      flex-direction: row;
    }
  }
  @media (width>=64rem) {
    .lg\:prose-lg {
      font-size: 1.125rem;
      line-height: 1.77778;
    }
    .lg\:prose-lg :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg :where([class~='lead']):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.09091em;
      margin-bottom: 1.09091em;
      font-size: 1.22222em;
      line-height: 1.45455;
    }
    .lg\:prose-lg :where(blockquote):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.66667em;
      margin-bottom: 1.66667em;
      padding-inline-start: 1em;
    }
    .lg\:prose-lg :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0;
      margin-bottom: 0.833333em;
      font-size: 2.66667em;
      line-height: 1;
    }
    .lg\:prose-lg :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.86667em;
      margin-bottom: 1.06667em;
      font-size: 1.66667em;
      line-height: 1.33333;
    }
    .lg\:prose-lg :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.66667em;
      margin-bottom: 0.666667em;
      font-size: 1.33333em;
      line-height: 1.5;
    }
    .lg\:prose-lg :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.77778em;
      margin-bottom: 0.444444em;
      line-height: 1.55556;
    }
    .lg\:prose-lg :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)),
    .lg\:prose-lg :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .lg\:prose-lg :where(picture > img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .lg\:prose-lg :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .lg\:prose-lg :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-top: 0.222222em;
      padding-inline-end: 0.444444em;
      padding-bottom: 0.222222em;
      border-radius: 0.3125rem;
      padding-inline-start: 0.444444em;
      font-size: 0.888889em;
    }
    .lg\:prose-lg :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 0.888889em;
    }
    .lg\:prose-lg :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 0.866667em;
    }
    .lg\:prose-lg :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 0.875em;
    }
    .lg\:prose-lg :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-top: 1em;
      padding-inline-end: 1.5em;
      padding-bottom: 1em;
      border-radius: 0.375rem;
      margin-top: 2em;
      margin-bottom: 2em;
      padding-inline-start: 1.5em;
      font-size: 0.888889em;
      line-height: 1.75;
    }
    .lg\:prose-lg :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)),
    .lg\:prose-lg :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
      padding-inline-start: 1.55556em;
    }
    .lg\:prose-lg :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0.666667em;
      margin-bottom: 0.666667em;
    }
    .lg\:prose-lg :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)),
    .lg\:prose-lg :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-inline-start: 0.444444em;
    }
    .lg\:prose-lg :where(.lg\:prose-lg > ul > li p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .lg\:prose-lg
      :where(.lg\:prose-lg > ul > li > p:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.33333em;
    }
    .lg\:prose-lg
      :where(.lg\:prose-lg > ul > li > p:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg
      :where(.lg\:prose-lg > ol > li > p:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.33333em;
    }
    .lg\:prose-lg
      :where(.lg\:prose-lg > ol > li > p:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0.888889em;
      margin-bottom: 0.888889em;
    }
    .lg\:prose-lg :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.33333em;
      margin-bottom: 1.33333em;
    }
    .lg\:prose-lg :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.33333em;
    }
    .lg\:prose-lg :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0.666667em;
      padding-inline-start: 1.55556em;
    }
    .lg\:prose-lg :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 3.11111em;
      margin-bottom: 3.11111em;
    }
    .lg\:prose-lg :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
    .lg\:prose-lg :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
    .lg\:prose-lg :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
    .lg\:prose-lg :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0;
    }
    .lg\:prose-lg :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .lg\:prose-lg :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .lg\:prose-lg :where(thead th:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-inline-start: 0;
    }
    .lg\:prose-lg :where(thead th:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-inline-end: 0;
    }
    .lg\:prose-lg :where(tbody td, tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-top: 0.75em;
      padding-inline-end: 0.75em;
      padding-bottom: 0.75em;
      padding-inline-start: 0.75em;
    }
    .lg\:prose-lg
      :where(tbody td:first-child, tfoot td:first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-inline-start: 0;
    }
    .lg\:prose-lg
      :where(tbody td:last-child, tfoot td:last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      padding-inline-end: 0;
    }
    .lg\:prose-lg :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1.77778em;
      margin-bottom: 1.77778em;
    }
    .lg\:prose-lg :where(figure > *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    .lg\:prose-lg :where(figcaption):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 1em;
      font-size: 0.888889em;
      line-height: 1.5;
    }
    .lg\:prose-lg :where(.lg\:prose-lg > :first-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-top: 0;
    }
    .lg\:prose-lg :where(.lg\:prose-lg > :last-child):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      margin-bottom: 0;
    }
  }
  @media (prefers-color-scheme: dark) {
    .dark\:prose-invert {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-lead: var(--tw-prose-invert-lead);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quotes: var(--tw-prose-invert-quotes);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-kbd: var(--tw-prose-invert-kbd);
      --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
      --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .prose-headings\:font-bold
    :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .prose-h1\:text-2xl :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .prose-h2\:text-xl :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .prose-h3\:text-lg :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .prose-a\:text-blue-600 :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose-code\:text-blue-600 :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--color-blue-600);
  }
  .prose-pre\:rounded-lg :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-radius: var(--radius-lg);
  }
  .prose-pre\:bg-gray-100 :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    background-color: var(--color-gray-100);
  }
  .prose-pre\:p-4 :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding: calc(var(--spacing) * 4);
  }
  .prose-img\:rounded-lg :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-radius: var(--radius-lg);
  }
  .\[\&_pre\]\:\!m-0 pre {
    margin: calc(var(--spacing) * 0) !important;
  }
  .\[\&_pre\]\:\!bg-transparent pre {
    background-color: #0000 !important;
  }
  .\[\&_pre\]\:\!p-0 pre {
    padding: calc(var(--spacing) * 0) !important;
  }
  .\[\&_pre_code\]\:\!font-mono pre code {
    font-family: var(--font-mono) !important;
  }
  .\[\&_pre_code\]\:\!text-sm pre code {
    font-size: var(--text-sm) !important;
    line-height: var(--tw-leading, var(--text-sm--line-height)) !important;
  }
}
pre code.hljs {
  border: 1px solid #e1e4e8;
  border-radius: 6px;
  padding: 16px;
}
@property --tw-rotate-x {
  syntax: '*';
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: '*';
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: '*';
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: '*';
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: '*';
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: '*';
  inherits: false;
}
@property --tw-font-weight {
  syntax: '*';
  inherits: false;
}
@property --tw-outline-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: '*';
  inherits: false;
}
@property --tw-brightness {
  syntax: '*';
  inherits: false;
}
@property --tw-contrast {
  syntax: '*';
  inherits: false;
}
@property --tw-grayscale {
  syntax: '*';
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: '*';
  inherits: false;
}
@property --tw-invert {
  syntax: '*';
  inherits: false;
}
@property --tw-opacity {
  syntax: '*';
  inherits: false;
}
@property --tw-saturate {
  syntax: '*';
  inherits: false;
}
@property --tw-sepia {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: '*';
  inherits: false;
}
@property --tw-duration {
  syntax: '*';
  inherits: false;
}
